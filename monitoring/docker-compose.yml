version: '2'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "10"
    tag: "{{.ImageName}}|{{.Name}}"

services:
  app_python:
    image: glebosotov/inno-devops-labs-app-python
    ports:
      - 1337:5000
    logging: *default-logging

  app_flutter:
    image: glebosotov/inno-devops-labs-app-flutter
    ports:
      - 1338:80
      - 1339:8080
    logging: *default-logging

  grafana:
    image: grafana/grafana
    container_name: monitoring.grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ${PWD}/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    logging: *default-logging

  promtail:
    image: grafana/promtail:2.6.1
    container_name: monitoring.promtail
    expose:
      - 9080
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ${PWD}/promtail/config.yaml:/etc/promtail/config.yaml
    command:
      - '-config.file=/etc/promtail/config.yaml'
    restart: unless-stopped
    logging: *default-logging

  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    logging: *default-logging

  prometheus:
     image: prom/prometheus:${PROMETHEUS_VERSION:-v2.39.1}
     volumes:
       - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
       - prometheus-data:/prometheus
     command:
       - '--config.file=/etc/prometheus/prometheus.yml'
       - '--storage.tsdb.path=/prometheus'
       - '--storage.tsdb.retention.time=14d'
       - '--web.console.libraries=/usr/share/prometheus/console_libraries'
       - '--web.console.templates=/usr/share/prometheus/consoles'
     ports:
       - "9090:9090"
     healthcheck:
       test: ["CMD-SHELL", "wget --no-verbose --tries=3 --spider http://localhost:9090/-/healthy || exit 1"]


volumes:
  grafana-data: {}
  loki-data: {}
  promtail-data: {}
  prometheus-data: {}